name: Ubuntu Hosted - Pi-hole + Tailscale + VNC

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Update & install base packages
        run: |
          sudo apt-get update --fix-missing
          sudo apt-get upgrade -y
          sudo apt-get install -y curl xfce4 xfce4-terminal dbus-x11 x11vnc xvfb git lsb-release jq

      - name: Install Docker & Docker Compose
        run: |
          # Install Docker
          curl -fsSL https://get.docker.com | sh
          sudo usermod -aG docker $USER
          
          # Install latest Docker Compose
          sudo rm -f /usr/local/bin/docker-compose
          COMPOSE_VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)
          sudo curl -L "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Start Docker service
        run: |
          sudo systemctl start docker
          sudo systemctl enable docker

      - name: Create docker-compose for Pi-hole
        run: |
          mkdir -p $HOME/pihole/etc-pihole $HOME/pihole/etc-dnsmasq.d
          cat > docker-compose.yml <<'EOF'
          version: '3'
          services:
            pihole:
              image: pihole/pihole:latest
              restart: unless-stopped
              environment:
                WEBPASSWORD: "${{ secrets.PIHOLE_PASSWORD }}"
              ports:
                - "8080:80"
              volumes:
                - ./pihole/etc-pihole:/etc/pihole
                - ./pihole/etc-dnsmasq.d:/etc/dnsmasq.d
          EOF

      - name: Start Pi-hole
        run: sudo docker-compose up -d

      - name: Install Tailscale
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscaled &
          sleep 2
          sudo tailscale up --authkey ${{ secrets.TAILSCALE_AUTH_KEY }} --hostname github-runner

      - name: Start VNC desktop
        run: |
          mkdir -p ~/.vnc
          echo "${{ secrets.VNC_PASSWORD }}" | x11vnc -storepasswd - ~/.vnc/passwd
          export DISPLAY=:1
          Xvfb :1 -screen 0 1024x768x24 &
          sleep 1
          dbus-launch startxfce4 &>/dev/null &
          sleep 3
          nohup x11vnc -display :1 -passwdfile ~/.vnc/passwd -forever -shared -rfbport 5901 &>/tmp/x11vnc.log &

      - name: Show status
        run: |
          tailscale status
          sudo docker ps

      - name: Keep job running (simulate unlimited)
        run: |
          echo "Workflow will run until GitHub cancels it (max 6-72h)."
          while true; do sleep 3600; done
